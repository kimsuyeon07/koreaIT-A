DROP TABLE REVIEW;
DROP TABLE FREPLY;

DROP TABLE RESERVATION;  
DROP TABLE STOREREG;	/* DROP TABLE STOREREG CASCADE CONSTRAINTS; */
DROP TABLE NOTICE;
DROP TABLE FBOARD;
DROP TABLE QNABOARD;

DROP TABLE MEMBER;
DROP TABLE OWNER;
DROP TABLE OWNERINFO;

DROP SEQUENCE MEMBER_SEQ;
DROP SEQUENCE REVIEW_SEQ;
DROP SEQUENCE NOTICE_SEQ;
DROP SEQUENCE STORERES_SEQ;
DROP SEQUENCE STOREREG_SEQ;
DROP SEQUENCE FBOARD_SEQ;
DROP SEQUENCE FREPLY_SEQ;
DROP SEQUENCE QNABOARD_SEQ;
CREATE SEQUENCE MEMBER_SEQ INCREMENT BY 1 START WITH 1 NOCYCLE NOCACHE;
CREATE SEQUENCE STORERES_SEQ INCREMENT BY 1 START WITH 1 NOCYCLE NOCACHE;
CREATE SEQUENCE STOREREG_SEQ INCREMENT BY 1 START WITH 1 NOCYCLE NOCACHE;
CREATE SEQUENCE NOTICE_SEQ INCREMENT BY 1 START WITH 1 NOCYCLE NOCACHE;
CREATE SEQUENCE FBOARD_SEQ INCREMENT BY 1 START WITH 1 NOCYCLE NOCACHE;
CREATE SEQUENCE FREPLY_SEQ INCREMENT BY 1 START WITH 1 NOCYCLE NOCACHE;
CREATE SEQUENCE QNABOARD_SEQ INCREMENT BY 1 START WITH 1 NOCYCLE NOCACHE;
CREATE SEQUENCE REVIEW_SEQ INCREMENT BY 1 START WITH 1 NOCYCLE NOCACHE;


CREATE TABLE MEMBER(
    MEMBERNO NUMBER PRIMARY KEY,
    MEMBERID VARCHAR2(32) UNIQUE ,
    MEMBERPW VARCHAR2(32),
    MEMBERNAME VARCHAR2(32),
    MEMBERADDR VARCHAR2(64),
    MEMBERTEL VARCHAR2(32),
    MEMBEREMAIL VARCHAR2(32),
    MEMBERAGE NUMBER,
    STATUS NUMBER
);
ALTER TABLE MEMBER MODIFY MEMBERID VARCHAR2(32) NOT NULL;
ALTER TABLE MEMBER MODIFY MEMBERAGE VARCHAR2(32) NOT NULL;

CREATE TABLE OWNERINFO (
    OWNERNO NUMBER PRIMARY KEY,
    OWNERNAME VARCHAR2(32),
    STORENAME VARCHAR2(32),
    OWNEREMAIL VARCHAR2(32) UNIQUE
);

CREATE TABLE OWNER(
    OWNERNO NUMBER PRIMARY KEY,
    OWNERPW VARCHAR2(32),
    OWNERTEL VARCHAR2(32),
    OWNEREMAIL VARCHAR2(32),
    OWNERNAME VARCHAR2(32)
);


INSERT INTO OWNER VALUES (000001,'1111','010-1111-1111','email1@home.com','백종원');
INSERT INTO OWNER VALUES (000002,'1111','010-1111-1111','email2@home.com','백종원');

select OWNERNO
  FROM STOREREG;




-- 가게 테이블
CREATE TABLE STOREREG
(
    STORENO NUMBER PRIMARY KEY,
    STORENAME VARCHAR2(32) NOT NULL,
    STORECONTENT VARCHAR2(300) NOT NULL,
    STORETABLE NUMBER NOT NULL,
    STORETEL VARCHAR2(32) NOT NULL,
    STOREADDR1 VARCHAR2(64) NOT NULL,
    STOREADDR2 VARCHAR2(64) NOT NULL,
    STOREADDR3 VARCHAR2(64) NOT NULL,
    STORETIME VARCHAR2(32) NOT NULL,
    STORESNS VARCHAR2(100),
    STORECATEGORY VARCHAR2(32),
    STOREMENU VARCHAR2(200),
  	ORIGINFILENAME VARCHAR2(256),
    SAVEFILENAME VARCHAR2(40),  -- 파일명 32바이트, 확장자 8바이트
    STOREHIT NUMBER,
    STATUS NUMBER,
    OWNERNO NUMBER,
    CONSTRAINT FK_STOREREG_OWNER FOREIGN KEY (OWNERNO) REFERENCES OWNER(OWNERNO)
);


-- 예약 테이블
CREATE TABLE RESERVATION
(
	RESNO NUMBER PRIMARY KEY,		-- 예약번호
	STORENO NUMBER,					-- 가게번호(외래키)
	MEMBERNO NUMBER,				-- 회원번호(외래키)
	RESDATE VARCHAR2(10) NOT NULL,	-- 예약한 해당 날짜
	RESHOURS VARCHAR2(20),			-- 예약 시간
	RESPEOPLE VARCHAR2(10),			-- 예약 인원
	RESNOTE VARCHAR2(4000),			-- 예약 요청사항
	RESPOSTDATE DATE				-- 예약한 날짜
);

-- 예약 테이블 외래키 삭제 
ALTER TABLE RESERVATION DROP CONSTRAINT FK_RESERVATION_STORENO; -- 가게 번호
ALTER TABLE RESERVATION DROP CONSTRAINT FK_RESERVATION_MEMBERNO;	-- 회원 번호 
ALTER TABLE STOREREG DROP CONSTRAINT FK_STOREREG_OWNER;

-- 예약 테이블 외래키 생성 
ALTER TABLE RESERVATION ADD CONSTRAINT FK_RESERVATION_STORENO FOREIGN KEY (STORENO) REFERENCES STOREREG(STORENO); -- 가게번호
ALTER TABLE RESERVATION ADD CONSTRAINT FK_RESERVATION_MEMBERNO FOREIGN KEY (MEMBERNO) REFERENCES MEMBER(MEMBERNO); -- 회원번호



CREATE TABLE NOTICE(
    NO NUMBER PRIMARY KEY,
    WRITER VARCHAR2(32),
    TITLE VARCHAR2(500),
    CONTENT VARCHAR2(4000),
    POSTDATE DATE,
    LASTDATE DATE,
    HIT NUMBER
);
INSERT INTO NOTICE VALUES (NOTICE_SEQ.NEXTVAL,'ADMIN','공지사항','공지사항 게시판입니다',SYSDATE,SYSDATE,0);


CREATE TABLE FBOARD(
     NO NUMBER PRIMARY KEY,
      WRITER VARCHAR2(32),
      CONTENTTYPE VARCHAR2(50)  CHECK ( CONTENTTYPE IN ('이벤트', '홍보글') ) NULL,
      TITLE VARCHAR2(500),
      CONTENT VARCHAR2(4000),
      FILENAME1 VARCHAR2(1000),
      POSTDATE DATE,
      LASTDATE DATE,
      HIT NUMBER,
      STATUS NUMBER
);
insert into fboard values (fboard_seq.nextval, 'jaims', '이벤트', '이벤트글', '이벤트 시작합니다.', '', sysdate, sysdate, 0,0);

CREATE TABLE FREPLY(
      FNO NUMBER PRIMARY KEY,
      NO NUMBER,
      WRITER VARCHAR2(32),
      CONTENT VARCHAR2(500),
      POSTDATE DATE,
      CONSTRAINT FK_REPLY_NO FOREIGN KEY (NO) REFERENCES FBOARD(NO)
);

CREATE TABLE QNABOARD(
    NO NUMBER PRIMARY KEY,
    WRITER VARCHAR2(32),
    TITLE VARCHAR2(32),
    CONTENT VARCHAR2(300),
    POSTDATE DATE    
);

CREATE TABLE REVIEW(
    WRITER VARCHAR2(32),
    NO NUMBER PRIMARY KEY,
    SCORE NUMBER,
    CONTENT VARCHAR2(300),
    FILENAME VARCHAR2(64),
    STORENO NUMBER,
      CONSTRAINT FK_REVIEW FOREIGN KEY (STORENO) REFERENCES STOREREG(STORENO)
);

DELETE FROM STOREREG WHERE STORENO = 1;
DELETE FROM STOREREG WHERE STORENO = 2;
INSERT INTO STOREREG VALUES(1,'홍콩반점','백종원이 하는 중화요리점입니다.','10','010-1111-1111','서울', '마포구', '삼성동 165-5','09:00-17:00','SNS','중식','짜장면, 짬뽕, 탕수육','01.jpg','01.jpg',0,0,000001);
INSERT INTO STOREREG VALUES(2,'새마을식당','백종원이 하는 한식요리점입니다.', '10','010-1111-1111','서울', '강남구', '삼성동 165-5','09:00-17:00','SNS','한식','돼지불백, 불고기, 제육볶음','02.jpg','02.jpg',0,0,000002);

DELETE FROM REVIEW WHERE STORENO = 1;
DELETE FROM REVIEW WHERE STORENO = 2;
DELETE FROM REVIEW WHERE STORENO = 3;
INSERT INTO REVIEW VALUES('qwer1234',REVIEW_SEQ.NEXTVAL,5,'정말맛있어요','FILENAME1',1);
INSERT INTO REVIEW VALUES('qwer1234',REVIEW_SEQ.NEXTVAL,4,'정말맛있어요','FILENAME1',2);
INSERT INTO REVIEW VALUES('qwer1234',REVIEW_SEQ.NEXTVAL,2,'평범했어요','FILENAME1',1);

commit;
